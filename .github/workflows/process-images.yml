name: Process and Upload Images

on:
  push:
    branches: [main, master]
    paths:
      - '_data/images/**'  # Only run when images are added/changed
  workflow_dispatch:  # Allow manual trigger

jobs:
  process-images:
    runs-on: ubuntu-latest
    
    # Only run if there are images to process
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[process-images]')
    
    permissions:
      contents: write  # Need write permission to commit changes back
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper commits
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm install
      
      - name: Check for images to process
        id: check-images
        run: |
          if [ -d "_data/images" ] && [ "$(ls -A _data/images 2>/dev/null)" ]; then
            echo "has-images=true" >> $GITHUB_OUTPUT
            echo "Found images to process:"
            ls -la _data/images/
          else
            echo "has-images=false" >> $GITHUB_OUTPUT
            echo "No images found to process"
          fi
      
      - name: Process and upload images
        if: steps.check-images.outputs.has-images == 'true'
        env:
          CI: "false"
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_PUBLIC_DOMAIN: ${{ secrets.R2_PUBLIC_DOMAIN }}
        run: |
          echo "üöÄ Starting image processing..."
          npx ts-node scripts/workflow.ts './_data/images' './_data/banks.json'
          echo "‚úÖ Image processing completed"
      
      - name: Check for changes
        id: check-changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if there are any changes to commit
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git status --short
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          fi
      
      - name: Commit and push changes
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git add .
          git commit -m "ü§ñ Automated image processing
          
          - Processed and uploaded images to Cloudflare R2
          - Updated banks.json with new image URLs
          - Cleaned up processed image files
          
          [skip ci]"
          
          git push origin ${{ github.ref_name }}
      
      - name: Summary
        if: always()
        run: |
          echo "## üìä Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.check-images.outputs.has-images }}" == "true" ]]; then
            echo "‚úÖ **Images found and processed**" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ÑπÔ∏è **No images found to process**" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ steps.check-changes.outputs.changes }}" == "true" ]]; then
            echo "‚úÖ **Changes committed back to repository**" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ÑπÔ∏è **No changes to commit**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- Images are now served from Cloudflare R2 CDN" >> $GITHUB_STEP_SUMMARY
          echo "- Database/JSON files have been updated with new URLs" >> $GITHUB_STEP_SUMMARY
          echo "- Original image files have been cleaned up from the repository" >> $GITHUB_STEP_SUMMARY

  # Optional: Notify on failure
  notify-failure:
    runs-on: ubuntu-latest
    needs: process-images
    if: failure()
    
    steps:
      - name: Create issue on failure
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üö® Image Processing Workflow Failed - Run #${{ github.run_number }}`,
              body: `## ‚ùå Automated Image Processing Failed
              
              **Workflow Run:** [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
              **Branch:** \`${{ github.ref_name }}\`
              **Commit:** ${{ github.sha }}
              
              ### Possible Issues:
              - Missing or invalid R2 credentials
              - Image files in wrong format or too large
              - R2 bucket permissions or configuration issues
              - Network connectivity problems
              
              ### Required Secrets:
              - \`R2_ACCESS_KEY_ID\`
              - \`R2_SECRET_ACCESS_KEY\` 
              - \`R2_ACCOUNT_ID\`
              - \`R2_BUCKET_NAME\`
              - \`R2_PUBLIC_DOMAIN\` (optional)
              
              Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for detailed error information.
              
              ---
              *This issue was automatically created by the failed image processing workflow.*`,
              labels: ['bug', 'automation', 'image-processing']
            });